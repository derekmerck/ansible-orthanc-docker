---
# tasks file for orthanc-docker

#############################
# Setup dockerhost
#############################

- name: Get dockerhost
  shell: /sbin/ip route | awk '/docker0/ { print $NF }'
  register: dockerhost_response
  when: dockerhost_ip is not defined

- set_fact:
    dockerhost_ip:    "{{ dockerhost_response.stdout }}"
  when: dockerhost_ip is not defined


#############################
# Create required data container and directories
#############################

- name: Create data container
  docker_container:
    name: '{{ orthanc_container_name + "-data" }}'
    image: busybox
    state: present
    volumes:
      - '/var/lib/orthanc/db'
  when: orthanc_use_data_container

- name:    "Setup orthanc data folder"
  file:
    path:  "{{ orthanc_data_dir }}"
    state: directory
  when: not orthanc_use_data_container

- name: "Create {{ orthanc_config_dir }} directory for config"
  file:
    path: '{{ orthanc_config_dir }}'
    state: directory

- name: "Create {{ orthanc_config_dir }}/scripts directory for scripts"
  file:
    path: '{{ orthanc_config_dir }}/scripts'
    state: directory


#############################
# Copy configs
#############################

- name: "Decoding passwords"
  set_fact:
    orthanc_users: "{{ orthanc_users | combine( { item.key:item.value | decrypt(key) } ) }}"
  with_dict: '{{ orthanc_users }}'
  when: orthanc_users is defined and fernet_key is defined

- name: 'Add {{ orthanc_config_dir }}/orthanc.json'
  template:
    src: orthanc.json.j2
    dest: '{{ orthanc_config_dir + "/orthanc.json" }}'
  notify: restart_orthanc_container

- name: "Setup routing lua"
  template:
    src: "templates/autorouter.lua.j2"
    dest: "{{ orthanc_config_dir }}/scripts/autorouter.lua"
  when: orthanc_destinations is defined and orthanc_destinations and (orthanc_compress is not defined or not orthanc_compress)
  notify: restart_orthanc_container

- name: "Setup routing and compression lua"
  template:
    src:  "templates/j2k_autorouter.lua.j2"
    dest: "{{ orthanc_config_dir }}/scripts/autorouter.lua"
  when: orthanc_destinations is defined and orthanc_destinations and orthanc_compress is defined and orthanc_compress
  notify: restart_orthanc_container


#############################
# Setup PG database if required
#############################

- name: "Add PG database"
  include_role:
    name: postgres-docker
    tasks_from: add_database_play
  vars:
    postgres_user:      '{{ orthanc_pg_user }}'
    postgres_password:  '{{ orthanc_pg_password }}'
    postgres_database:  '{{ orthanc_pg_database }}'
  when: orthanc_pg_backend


#############################
# Setup container
#############################

- name: "Pull Orthanc image - {{ orthanc_docker_image }}:{{ orthanc_docker_image_tag }}"
  docker_image:
    name: '{{ orthanc_docker_image }}'
    tag:  '{{ orthanc_docker_image_tag }}'

- name: Setup Orthanc container
  docker_container:
    name:  '{{ orthanc_container_name }}'
    image: '{{ orthanc_docker_image + ":" + orthanc_docker_image_tag }}'
    state:  started
    ports:
      - '{{ orthanc_api_port }}:8042'
      - '{{ orthanc_dicom_port }}:4242'

    entrypoint:  ["Orthanc"]
    command:   '{{ ["/etc/orthanc"] + (["--verbose"] if orthanc_verbose else []) }}'

    volumes_from: '{{ [orthanc_container_name + "-data"] if orthanc_use_data_container else [] }}'

    volumes: '{{ ["{}:/etc/orthanc:ro".format(orthanc_config_dir),
                  "{}/scripts:/var/lib/orthanc/scripts:ro".format(orthanc_config_dir)] +
                  ([orthanc_data_dir + ":/var/lib/orthanc/db:z"] if not orthanc_use_data_container
                                                                 else []) }}'
    env:
      TZ: '{{ orthanc_container_timezone }}'

    log_driver:   "{{ orthanc_logger }}"
    log_options:  "{{ orthanc_log_opts }}"

  register: orthanc_container


#############################
# Wait for ready
#############################

- meta: flush_handlers

- name: Wait until Orthanc is available
  wait_for: port={{ orthanc_api_port }} delay=3
  when: orthanc_container.changed
