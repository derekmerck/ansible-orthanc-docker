---
# tasks file for orthanc-docker

- name: Get dockerhost
  shell: /sbin/ip route | awk '/docker0/ { print $NF }'
  register: dockerhost_response

- set_fact:
    dockerhost_ip:    "{{ dockerhost_response.stdout }}"

- name: Create data container
  docker_container:
    name: '{{ orthanc_container_name + "-data" }}'
    image: busybox
    state: present
    volumes:
      - '/var/lib/orthanc/db'
  when: orthanc_use_data_container

- name:    "Setup orthanc data folder"
  file:
    path:  "{{ orthanc_data_dir }}"
    state: directory
  become:  yes
  when: not orthanc_use_data_container

- name: "Create {{ orthanc_config_dir }} directory for config"
  file:
    path: '{{ orthanc_config_dir }}'
    state: directory
  become: yes

- name: "Decoding passwords"
  set_fact:
    orthanc_users: "{{ orthanc_users | combine( { item.key:item.value | decrypt(key) } ) }}"
  with_dict: '{{ orthanc_users }}'
  when: orthanc_users is defined and fernet_key is defined

- name: 'Add {{ orthanc_config_dir }}/orthanc.json'
  template:
    src: orthanc.json.j2
    dest: '{{ orthanc_config_dir + "/orthanc.json" }}'
  become: yes
  notify: restart_orthanc_container

- name: "Setup routing lua"
  template: >
    src: templates/autorouter.lua.j2
    dest: "{{ orthanc_config_dir }}/scripts/autorouter.lua"
  when: orthanc_destinations is defined and not orthanc_compress
  notify: restart_orthanc_container

- name: "Setup routing and compression lua"
  template: >
    src: templates/j2k_autorouter.lua.j2
    dest: "{{ orthanc_config_dir }}/scripts/autorouter.lua"
  when: orthanc_destinations is defined and orthanc_compress
  notify: restart_orthanc_container

- name: "Pull Orthanc image - {{ orthanc_docker_image }}:{{ orthanc_docker_image_tag }}"
  docker_image:
    name: '{{ orthanc_docker_image }}'
    tag:  '{{ orthanc_docker_image_tag }}'

- name: Setup Orthanc container
  docker_container:
    name:  '{{ orthanc_container_name }}'
    image: '{{ orthanc_docker_image + ":" + orthanc_docker_image_tag }}'
    state:  started
    ports:
      - '{{ orthanc_api_port }}:8042'
      - '{{ orthanc_dicom_port }}:4242'

    entrypoint:  ["Orthanc"]
    command:   '{{ ["/etc/orthanc"] + (["--verbose"] if orthanc_verbose else []) }}'

    volumes_from: '{{ [orthanc_container_name + "-data"] if orthanc_use_data_container else [] }}'

    volumes: '{{ ["{}:/etc/orthanc:ro".format(orthanc_config_dir)] + ([orthanc_data_dir + ":/var/lib/orthanc/db:z"] if not orthanc_use_data_container else []) }}'
    env:
      TZ: '{{ orthanc_container_timezone }}'
  register: orthanc_container

- meta: flush_handlers

- name: Wait until Orthanc is available
  wait_for: port={{ orthanc_api_port }} delay=3
  when: orthanc_container.changed
